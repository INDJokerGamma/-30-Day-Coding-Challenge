You are given a 0-indexed 2D integer matrix grid of size n * n with values in the range [1, n2]. Each integer appears exactly once except a which appears twice and b which is missing. The task is to find the repeating and missing numbers a and b.

Return a 0-indexed integer array ans of size 2 where ans[0] equals to a and ans[1] equals to b.


class Solution {
public:
    vector<int> findMissingAndRepeatedValues(vector<vector<int>>& grid) {
        int n = grid.size();
        vector<int> freq (n*n+1 , 0) ;
        for(auto & row : grid)
            for(auto & col : row)
                freq[col]++;
        
        vector<int> ans(2,0);
        for(int i = 1 ; i <= n*n ; i++)
            if (freq[i] == 2)
                ans[0] = i ;
            else if ( freq[i] == 0)
                ans[1] = i ;
        
        return ans;
    }
};
