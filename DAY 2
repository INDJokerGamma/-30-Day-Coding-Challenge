PROBLEM 1:
Write a function to find the longest common prefix string amongst an array of strings.

If there is no common prefix, return an empty string "".


class Solution {
public:
    string longestCommonPrefix(vector<string>& strs) 
    {
        if(strs.empty())
            return "" ;

        string prefix= strs[0];
        for(int i=1; i<strs.size(); i++)
        {
            while(strs[i].find(prefix) != 0)
            {
                prefix = prefix.substr(0, prefix.size()-1);
                if (prefix.empty ())
                    return ""; 
            }
        }  
        return prefix;
    }

PROBLEM 2:
Given an integer numRows, return the first numRows of Pascal's triangle.

In Pascal's triangle, each number is the sum of the two numbers directly above it as shown:

class Solution {
public:
    vector<vector<int>> generate(int numRows) {
        vector<vector<int>> result;
        for (int i =0; i< numRows; i++)
        {
            vector<int> row(i+1, 1);
            for (int j=1; j<i ; j++ )
            {
                row[j] = result[i-1][j-1] + result[i-1][j];
            }
            result.push_back(row);
        }
        return result;
}
